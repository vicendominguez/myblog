<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Websockets on VicenDominguez</title>
    <link>//localhost:1313/tags/websockets/</link>
    <description>Recent content in Websockets on VicenDominguez</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 31 Jul 2014 17:06:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/websockets/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nodejs: your global modules dont work after installing</title>
      <link>//localhost:1313/posts/nodejs-your-global-modules-dont-work-after-installing/</link>
      <pubDate>Thu, 31 Jul 2014 17:06:00 +0000</pubDate>
      <guid>//localhost:1313/posts/nodejs-your-global-modules-dont-work-after-installing/</guid>
      <description>&lt;p&gt;Another linux distribution enigma.&lt;/p&gt;&#xA;&lt;p&gt;In the name of Tutatis, why f**** the node_modules directories are different in npm and &amp;ldquo;distro&amp;rdquo; packages???? The error message is similar to:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error: Cannot find module &amp;#39;any_npm_module&amp;#39;&#xA; at Function.Module._resolveFilename (module.js:338:15)&#xA; at Function.Module._load (module.js:280:25)&#xA; at Module.require (module.js:364:17)&#xA; at require (module.js:380:17)&#xA; at repl:1:7&#xA; at REPLServer.self.eval (repl.js:110:21)&#xA; at repl.js:249:20&#xA; at REPLServer.self.eval (repl.js:122:7)&#xA; at Interface.&amp;lt;anonymous&amp;gt; (repl.js:239:12)&#xA; at Interface.emit (events.js:95:17)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Surprise!!!!&lt;/p&gt;&#xA;&lt;p&gt;CentOS, Fedora, Ubuntu, Debian and MacOSX-ports are using diferent path for the nodejs global modules. If you install the binary of &amp;ldquo;node&amp;rdquo; and &amp;ldquo;npm&amp;rdquo;, and later, you choose to use npm to install some modules, your modules will be dissapeared.&lt;/p&gt;</description>
    </item>
    <item>
      <title>sockstat-zabbix-template monitor</title>
      <link>//localhost:1313/posts/sockstat-zabbix-template-monitor/</link>
      <pubDate>Wed, 29 Jan 2014 10:30:00 +0000</pubDate>
      <guid>//localhost:1313/posts/sockstat-zabbix-template-monitor/</guid>
      <description>&lt;p&gt;Zabbix 2.2 comes with support of loadable modules for extending Zabbix agent and server without sacrificing performance.&lt;/p&gt;&#xA;&lt;p&gt;A loadable module is basically a shared library used by Zabbix server or agent and loaded on startup. The library should contain certain functions, so that a Zabbix process may detect that the file is indeed a module it can load and work with.&lt;/p&gt;&#xA;&lt;p&gt;Loadable modules have a number of benefits. Great performance and ability to implement any logic are very important, but perhaps the most important advantage is the ability to develop, use, and share Zabbix modules. It contributes to trouble-free maintenance and helps to deliver new functionality easier and independently of the Zabbix core code base.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Websockets &#43; Nodejs &#43; Nginx</title>
      <link>//localhost:1313/posts/websockets--nodejs--nginx/</link>
      <pubDate>Thu, 13 Jun 2013 10:19:00 +0000</pubDate>
      <guid>//localhost:1313/posts/websockets--nodejs--nginx/</guid>
      <description>&lt;p&gt;With the latest version of Nginx, it supports HTTP 1.1 with bidirectional websockets. So it is possible to use it with Node.js (for example).&lt;/p&gt;&#xA;&lt;p&gt;A Spanish intro in this post: &lt;a href=&#34;http://www.securityartwork.es/2013/06/13/abstrayendo-websockets-ssl/&#34;&gt;SecurityArtwork&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here, my minimal-snippets: One plain and one for SSL:&lt;/p&gt;&#xA;&lt;script src=&#34;https://gist.github.com/vicendominguez/09d9afbdd23f46890fa4.js&#34;&gt;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
