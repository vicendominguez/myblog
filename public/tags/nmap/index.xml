<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nmap on VicenDominguez</title>
    <link>//localhost:1313/tags/nmap/</link>
    <description>Recent content in Nmap on VicenDominguez</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 06 Sep 2014 10:36:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/nmap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Killing old Linksys WAG54* or WAG200* like &#34;Rambo&#34; (temporary)</title>
      <link>//localhost:1313/posts/killing-old-linksys-wag54-or-wag200-like-rambo-temporary/</link>
      <pubDate>Sat, 06 Sep 2014 10:36:00 +0000</pubDate>
      <guid>//localhost:1313/posts/killing-old-linksys-wag54-or-wag200-like-rambo-temporary/</guid>
      <description>&lt;p&gt;It looks like you&amp;rsquo;re sharing a detailed account of a proof-of-concept (PoC) for exploiting an old Linksys WAG200G router. The PoC seems to cause the router to crash or become unresponsive, effectively performing a denial-of-service (DoS) attack on it.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a breakdown of the key points:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Target Identification&lt;/strong&gt;: The target is a Linksys WAG200G router with firmware version 1.01.04.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Exploit Process&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Connect to the target IP address.&lt;/li&gt;&#xA;&lt;li&gt;Send a series of malicious requests or data that causes the router&amp;rsquo;s memory to become unresponsive.&lt;/li&gt;&#xA;&lt;li&gt;This leads to a temporary DoS condition.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Impact&lt;/strong&gt;: The router stops responding for approximately 5-10 minutes, making it unusable during this period.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;python-poc-script&#34;&gt;Python PoC Script&lt;/h3&gt;&#xA;&lt;p&gt;The script you&amp;rsquo;ve shared appears to be a basic implementation of the exploit. It connects to the target IP address and sends a series of requests that might cause the memory overflow. Here&amp;rsquo;s a simplified version based on your description:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using nc and ncat with tor without torify/torsocks</title>
      <link>//localhost:1313/posts/using-nc-and-ncat-with-tor-without-torifytorsocks/</link>
      <pubDate>Wed, 27 Aug 2014 13:47:00 +0000</pubDate>
      <guid>//localhost:1313/posts/using-nc-and-ncat-with-tor-without-torifytorsocks/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re running into issues with using torify/torsocks in a script that involves nc and ncat, there are some handy parameters to make it work easily.&lt;/p&gt;&#xA;&lt;p&gt;For example, when you have a Tor SOCKS proxy set up on localhost and you&amp;rsquo;re using netcat (nc), the command would look something like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nc -v -X5 -x localhost:9050 &amp;lt;server&amp;gt; &amp;lt;port&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And for ncat, it would be:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ncat -v --proxy localhost:9050 --proxy-type socks5 &amp;lt;server&amp;gt; &amp;lt;port&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Of course, you can use any proxy. This is super useful for scripting!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Searching full anonymous proxies </title>
      <link>//localhost:1313/posts/searching-full-anonymous-proxies/</link>
      <pubDate>Tue, 14 May 2013 09:48:00 +0000</pubDate>
      <guid>//localhost:1313/posts/searching-full-anonymous-proxies/</guid>
      <description>&lt;p&gt;I have created a PoC to try to get full anonymous proxies. This script discovers if your IP is fully changed and anonymous using a proxy. It works via NSE by NMAP.&lt;/p&gt;&#xA;&lt;p&gt;I wrote one post about it in Spanish here: &lt;a href=&#34;http://www.securityartwork.es/2013/05/14/a-vueltas-con-la-deteccion-de-proxys/&#34;&gt;Security Artwork&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The PoC source code is available here: &lt;a href=&#34;https://github.com/vicendominguez/http-open-proxy-anon&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;:)&lt;/p&gt;&#xA;&lt;p&gt;Vte&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
